#import("//build/config/jumbo.gni")
import("//build/util/process_version.gni")
import("//third_party/icu/config.gni")
import("//tools/v8_context_snapshot/v8_context_snapshot.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/repack.gni")

assert(is_android || is_linux)

if(is_android)
{
    group("demo_shell") {
        testonly = true
        deps = [
            "android:demo_shell_apk"
        ]
    }
}
else
{
    executable("demo_shell") {
        testonly = true
        sources = [
            "app/demo_shell_main.cc",
        ]

        deps = [
            ":demo_shell_lib",
            ":pak",
        ]
    }
}

process_version("demo_webview_version_header") {
  template_file = "//demo/demo_shell/version.h.in"
  sources = [
    "//chrome/VERSION",
  ]
  output = "$target_gen_dir/version.h"
  extra_args = [
    "-e",
    "VERSION_FULL=\"%s.%s.%s.%s\" % (MAJOR,MINOR,BUILD,PATCH)",
  ]
}

static_library("demo_shell_lib") {
    testonly = true
    sources = [
        "android/demo_shell_manager.cc",
        "android/demo_shell_manager.h",
        # app
        "app/demo_shell_content_main_delegate.cc",
        "app/demo_shell_content_main_delegate.h",

        # browser
        # "browser/demo_shell_browser_main.cc",
        # "browser/demo_shell_browser_main.h",
        "browser/demo_shell_content_browser_client.cc",
        "browser/demo_shell_content_browser_client.h",
        "browser/demo_shell_browser_main_parts.cc",
        "browser/demo_shell_browser_main_parts.h",
        "browser/shell.h",
        "browser/shell.cc",
        "browser/shell_android.cc",
        "browser/demo_shell_browser_context.cc",
        "browser/demo_shell_browser_context.h",
        "browser/demo_shell_download_manager_delegate.cc",
        "browser/demo_shell_download_manager_delegate.h",
        "browser/demo_shell_permission_manager.h",
        "browser/demo_shell_permission_manager.cc",

        # common
        # content_client实现类
        "common/demo_shell_content_client.cc",
        "common/demo_shell_content_client.h",
        "common/demo_shell_switches.h",
        "common/demo_shell_switches.cc",
        # "common/demo_shell_origin_trial_policy.cc",
        # "common/demo_shell_origin_trial_policy.h",

        #render
        "renderer/demo_shell_content_renderer_client.h",
        "renderer/demo_shell_content_renderer_client.cc",
        #gpu
    ]

    public_deps = [
        #":android_demo_shell_descriptors",

        # # #include'ed by renderer/web_test/blink_test_runner.h
        # ":mojo_bindings",

        # # The generated mojom JS bindings are used by web tests.
        # ":mojo_bindings_js",

        # This exposes all public content APIs.
        "//content/public/app",
        "//content/public/browser",
        "//content/public/child",
        "//content/public/common",
        "//content/public/gpu",
        "//content/public/renderer",
        "//content/public/utility",
        "//services/network:network_service",
    ]

    deps = [
        ":demo_webview_version_header",

        "//base",
        "//base:base_static",
        "//cc",
        "//components/crash/core/app",
        "//components/keyed_service/content",
        "//components/web_cache/browser",

        # UI
        "//ui/base",
        "//ui/base/clipboard",
        "//ui/base/ime/init",
        "//ui/display",
        "//ui/events:events_base",
        "//ui/gfx",
        "//ui/gfx/geometry",
        "//ui/gfx/ipc",
        "//ui/gfx/ipc/geometry",
        "//ui/gfx/ipc/skia",
        "//ui/gl",
        "//ui/platform_window",
        "//url",
    ]

    if (toolkit_views) {
        deps += [
            "//ui/views",
            "//ui/resources",
            "//ui/views:test_support",
            "//ui/views/controls/webview",
            "//ui/wm:test_support",
        ]
        sources += [
            "browser/shell_views.cc",
        ]
    }

    if (use_aura) {
        deps += [
        "//ui/aura",
        "//ui/aura:test_support",
        "//ui/events",
        "//ui/strings",
        "//ui/wm",
        ]
        sources += [
        "browser/demo_shell_platform_data_aura.h",
        "browser/demo_shell_platform_data_aura.cc",
        ]
    }

    if (is_android) {
        deps += [
            "//base/test:test_support",
            # 这是运行时依赖，如果缺少这个会导致运行时崩溃
            "//components/embedder_support/android:view",
            "android:demo_shell_jni_headers",
            "//content/test:android_test_message_pump_support",
            "//mojo/public/java/system:test_support",
            "//ui/android",
        ]
    }
}

# source_set("android_demo_shell_descriptors") {
#   testonly = true
#   sources = [
#     "android/demo_shell_descriptors.h",
#   ]
#   public_deps = [
#     "//content/public/common:content_descriptors",
#   ]
# }

# mojom("mojo_bindings") {
#   sources = [
#     "common/power_monitor_test.mojom",
#     "common/web_test.mojom",
#     "common/web_test/fake_bluetooth_chooser.mojom",
#     "common/web_test/web_test_bluetooth_fake_adapter_setter.mojom",
#   ]
#   public_deps = [
#     "//mojo/public/mojom/base",
#     "//skia/public/mojom",
#     "//ui/gfx/geometry/mojom",
#     "//url/mojom:url_mojom_gurl",
#     "//url/mojom:url_mojom_origin",
#   ]
# }

grit("demo_shell_resources_grit") {
    visibility = [ ":*" ]
    resource_ids = "resource_ids"
    source = "demo_shell_resources.grd"
    outputs = [
        "grit/demo_shell_resources.h",
        "demo_shell_resources.pak",
    ]
}

repack("pak") {
  testonly = true
  sources = [
    "$root_gen_dir/base/tracing/protos/tracing_proto_resources.pak",
    "$root_gen_dir/content/browser/resources/media/media_internals_resources.pak",
    "$root_gen_dir/content/browser/webrtc/resources/webrtc_internals_resources.pak",
    "$root_gen_dir/content/content_resources.pak",
    # "$root_gen_dir/content/dev_ui_content_resources.pak",
    "$root_gen_dir/content/quota_internals_resources.pak",
    # "$root_gen_dir/content/shell/shell_resources.pak",
    "$root_gen_dir/content/test/web_ui_mojo_test_resources.pak",
    "$root_gen_dir/mojo/public/js/mojo_bindings_resources.pak",
    "$root_gen_dir/net/net_resources.pak",
    "$root_gen_dir/third_party/blink/public/resources/blink_resources.pak",
    "$root_gen_dir/third_party/blink/public/resources/blink_scaled_resources_100_percent.pak",
    "$root_gen_dir/third_party/blink/public/resources/inspector_overlay_resources.pak",
    "$root_gen_dir/third_party/blink/public/strings/blink_accessibility_strings_en-US.pak",
    "$root_gen_dir/third_party/blink/public/strings/blink_strings_en-US.pak",
    "$root_gen_dir/ui/resources/ui_resources_100_percent.pak",
    # "$root_gen_dir/ui/resources/webui_generated_resources.pak",
    "$root_gen_dir/ui/strings/app_locale_settings_en-US.pak",
    "$root_gen_dir/ui/strings/ax_strings_en-US.pak",
    "$root_gen_dir/ui/strings/ui_strings_en-US.pak",

    "$root_gen_dir/demo/demo_shell/demo_shell_resources.pak",

  ]

  deps = [
    ":demo_shell_resources_grit",
    "//base/tracing/protos:chrome_track_event_resources",
    "//content:content_resources",
    "//content/browser/resources:resources",
    "//content/browser/resources/media:resources",
    "//content/browser/webrtc/resources",
    "//content/test:web_ui_mojo_test_resources",
    "//mojo/public/js:resources",
    "//net:net_resources",
    "//third_party/blink/public:devtools_inspector_resources",
    "//third_party/blink/public:resources",
    "//third_party/blink/public:scaled_resources_100_percent",
    "//third_party/blink/public/strings",
    "//third_party/blink/public/strings:accessibility_strings",
    "//ui/resources",
    "//ui/strings",
  ]

  if (toolkit_views) {
    deps += [ "//ui/views/resources" ]
    sources +=
        [ "$root_gen_dir/ui/views/resources/views_resources_100_percent.pak" ]
  }
  output = "$root_out_dir/demo_shell.pak"
}
